// For license information, see `https://assets.adobedtm.com/717b2dc27cb7/f6f10f796b8e/d640b69eaaeb/RC5a2e4cef99d84ba88dcda577b3e4b1bc-source.js`.
_satellite.__registerScript('https://assets.adobedtm.com/717b2dc27cb7/f6f10f796b8e/d640b69eaaeb/RC5a2e4cef99d84ba88dcda577b3e4b1bc-source.min.js', "<script type = \"module\" >\n    import {\n        getCLS,\n        getFID,\n        getLCP\n    } from 'https://unpkg.com/web-vitals/base?module';\ntry{\n  var values_obj = {};\n  var bmwdtm_hq_perf = window.epaas.api.getPersistence(\"bmwdtm_hq_perf\");\n  function getValuesPerf(value_obj) {\n\n      if (value_obj.name == 'CLS') {\n          _satellite.logger.log('CLS object',value_obj); \n          values_obj.clsTotal = (value_obj.value * 1000);\n          var clsValues = [];\n          for (var i = 0; i < value_obj.entries.length; i++) {\n              if (value_obj.entries[i].hadRecentInput == false) {   \n                      clsValues.push(value_obj.entries[i].value);\n                      clsValues.sort(function(a, b){return a - b});\n                      values_obj.cls = (clsValues[clsValues.length - 1] * 1000);\n              }\n          }\n\n      } else if (value_obj.name == 'FID') {\n          _satellite.logger.log('FID object',value_obj);\n          var fid = value_obj.value;\n          values_obj.fid = fid;\n          values_obj.fidHTML = value_obj.entries[value_obj.entries.length - 1].target && value_obj.entries[value_obj.entries.length - 1].target.className;\n      } else if (value_obj.name == 'LCP') {\n          _satellite.logger.log('LCP object',value_obj);\n          var lcp = value_obj.value;\n          values_obj.lcp = lcp;\n          values_obj.lcpHTML = value_obj.entries[value_obj.entries.length - 1].element && value_obj.entries[value_obj.entries.length - 1].element.className;\n      }\n\n      var bmwdtm_hq_perf_values = bmwdtm_hq_perf;\n      var bmwdtm_hq_perf_values = JSON.parse(bmwdtm_hq_perf_values);\n      var final_object = Object.assign(bmwdtm_hq_perf_values, values_obj);\n      if (_satellite.getVar('isAdobeAnalyticsAllowed') == 'true') {\n          _satellite.logger.log(\"khubruy new page speed object!! it works!\", final_object);\n          window.epaas.api.setPersistence(\"bmwdtm_hq_perf\",JSON.stringify(final_object));\n      }\n  }\n\n  if(bmwdtm_hq_perf != null && bmwdtm_hq_perf != \"\"){\n      getCLS(getValuesPerf, true);\n      getFID(getValuesPerf,true);\n      getLCP(getValuesPerf,true); \n  }\n}catch(e){\n  _satellite.logger.log('Error in  speed tracking',e);\n}\n</script>");